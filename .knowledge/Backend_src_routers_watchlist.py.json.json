{"is_source_file": true, "format": "Python", "description": "This file defines API routes for managing a user's watchlist in a streaming application, including listing, adding, and removing content from a profile's watchlist. It uses FastAPI for HTTP endpoint definitions, SQLAlchemy for database interactions, and depends on external modules for security and data models.", "external_files": ["src/core/database", "src/core/security", "src/models/models", "src/schemas/schemas"], "external_methods": ["get_db", "get_current_user", "db.get", "db.query", "db.add", "db.commit", "db.refresh", "db.delete"], "published": ["router"], "classes": [{"name": "APIRouter", "description": "FastAPI router used to define related API endpoints for the watchlist functionality."}], "methods": [{"name": "Profile _ensure_profile(profile_id: int, user: User, db: Session)", "description": "Verifies that a profile exists and belongs to the current user; raises an HTTP 404 error if not.", "scope": "", "scopeKind": ""}, {"name": "list_watchlist(profile_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Handles GET requests to list all items in a profile's watchlist, returning a list of WatchlistItemOut schemas.", "scope": "", "scopeKind": ""}, {"name": "add_to_watchlist( profile_id: int, content_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db), )", "description": "Handles POST requests to add a content item to a profile's watchlist, avoiding duplicates.", "scope": "", "scopeKind": ""}, {"name": "remove_from_watchlist( profile_id: int, content_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db), )", "description": "Handles DELETE requests to remove a content item from a profile's watchlist.", "scope": "", "scopeKind": ""}], "calls": ["db.get", "db.query", "db.add", "db.commit", "db.refresh", "db.delete", "get_current_user", "get_db"], "search-terms": ["watchlist", "FastAPI routes", "profile management", "SQLAlchemy ORM"], "state": 2, "file_id": 14, "knowledge_revision": 29, "git_revision": "", "ctags": [{"_type": "tag", "name": "_ensure_profile", "path": "/home/kavia/workspace/code-generation/cinestream--movie--web-series-streaming-app-96446-96626/Backend/src/routers/watchlist.py", "pattern": "/^def _ensure_profile(profile_id: int, user: User, db: Session) -> Profile:$/", "language": "Python", "typeref": "typename:Profile", "kind": "function", "signature": "(profile_id: int, user: User, db: Session)"}, {"_type": "tag", "name": "add_to_watchlist", "path": "/home/kavia/workspace/code-generation/cinestream--movie--web-series-streaming-app-96446-96626/Backend/src/routers/watchlist.py", "pattern": "/^def add_to_watchlist($/", "language": "Python", "kind": "function", "signature": "( profile_id: int, content_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "list_watchlist", "path": "/home/kavia/workspace/code-generation/cinestream--movie--web-series-streaming-app-96446-96626/Backend/src/routers/watchlist.py", "pattern": "/^def list_watchlist(profile_id: int, current_user: User = Depends(get_current_user), db: Session /", "language": "Python", "kind": "function", "signature": "(profile_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "remove_from_watchlist", "path": "/home/kavia/workspace/code-generation/cinestream--movie--web-series-streaming-app-96446-96626/Backend/src/routers/watchlist.py", "pattern": "/^def remove_from_watchlist($/", "language": "Python", "kind": "function", "signature": "( profile_id: int, content_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/cinestream--movie--web-series-streaming-app-96446-96626/Backend/src/routers/watchlist.py", "pattern": "/^router = APIRouter(prefix=\"\\/watchlist\", tags=[\"watchlist\"])$/", "language": "Python", "kind": "variable"}], "hash": "fd1d1c756a5a7d7a23ee56012d93155c", "format-version": 4, "code-base-name": "Backend", "filename": "Backend/src/routers/watchlist.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/watchlist\", tags=[\"watchlist\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"29": ""}]}