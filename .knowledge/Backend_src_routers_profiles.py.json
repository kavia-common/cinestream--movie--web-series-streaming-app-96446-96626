{"is_source_file": true, "format": "Python", "description": "This file defines REST API endpoints for managing user profiles in a web application using FastAPI. It includes CRUD operations: list, create, update, and delete profiles, and interacts with database models and schemas.", "external_files": ["src.core.database", "src.core.security", "src.models.models", "src.schemas.schemas"], "external_methods": ["get_db", "get_current_user"], "published": [], "classes": [{"name": "APIRouter", "description": "FastAPI's router object used to define API routes for profiles."}], "methods": [{"name": "list_profiles(current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Endpoint to list all profiles for the current user.", "scope": "", "scopeKind": ""}, {"name": "create_profile(payload: ProfileCreate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Endpoint to create a new profile for the current user.", "scope": "", "scopeKind": ""}, {"name": "update_profile( profile_id: int, payload: ProfileUpdate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db), )", "description": "Endpoint to update an existing profile by ID.", "scope": "", "scopeKind": ""}, {"name": "delete_profile(profile_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))", "description": "Endpoint to delete a profile by ID.", "scope": "", "scopeKind": ""}], "calls": ["db.query", "db.get", "db.add", "db.commit", "db.refresh", "db.delete", "Raises HTTPException"], "search-terms": ["FastAPI profiles router", "User profile management", "Profile CRUD endpoints", "src/routers/profiles.py"], "state": 2, "file_id": 12, "knowledge_revision": 25, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_profile", "path": "/home/kavia/workspace/code-generation/cinestream--movie--web-series-streaming-app-96446-96626/Backend/src/routers/profiles.py", "pattern": "/^def create_profile(payload: ProfileCreate, current_user: User = Depends(get_current_user), db: S/", "language": "Python", "kind": "function", "signature": "(payload: ProfileCreate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "delete_profile", "path": "/home/kavia/workspace/code-generation/cinestream--movie--web-series-streaming-app-96446-96626/Backend/src/routers/profiles.py", "pattern": "/^def delete_profile(profile_id: int, current_user: User = Depends(get_current_user), db: Session /", "language": "Python", "kind": "function", "signature": "(profile_id: int, current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "list_profiles", "path": "/home/kavia/workspace/code-generation/cinestream--movie--web-series-streaming-app-96446-96626/Backend/src/routers/profiles.py", "pattern": "/^def list_profiles(current_user: User = Depends(get_current_user), db: Session = Depends(get_db))/", "language": "Python", "kind": "function", "signature": "(current_user: User = Depends(get_current_user), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/cinestream--movie--web-series-streaming-app-96446-96626/Backend/src/routers/profiles.py", "pattern": "/^router = APIRouter(prefix=\"\\/profiles\", tags=[\"profiles\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_profile", "path": "/home/kavia/workspace/code-generation/cinestream--movie--web-series-streaming-app-96446-96626/Backend/src/routers/profiles.py", "pattern": "/^def update_profile($/", "language": "Python", "kind": "function", "signature": "( profile_id: int, payload: ProfileUpdate, current_user: User = Depends(get_current_user), db: Session = Depends(get_db), )"}], "hash": "695321f5e3cf6bda338a36ecc2831453", "format-version": 4, "code-base-name": "Backend", "filename": "Backend/src/routers/profiles.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/profiles\", tags=[\"profiles\"])", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"25": ""}]}